/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        
        Collections.sort(intervals, new Comparator<Interval>(){
            public int compare(Interval one, Interval two){
                return one.start - two.start;
            }
        });
        
        
        if(intervals.size() == 1)
            return intervals;
        
        for(int i = 1; i<intervals.size();i++){
            if(intervals.get(i).start<=intervals.get(i-1).end){
             intervals.get(i-1).end = intervals.get(i-1).end>=intervals.get(i).end?intervals.get(i-1).end:intervals.get(i).end;
             intervals.remove(i);
             i--;
            }
            continue;
        }
        return intervals;
    }
}