public class Solution {
    public void solve(char[][] board) {
        
        int m = board.length;
        if(m==0)
            return;
        int n = board[0].length;
          
        for(int j=0;j<n;j++){
            if(board[0][j]=='O'){
                check(board,0,j);
            }
            
            if(board[m-1][j]=='O'){
                check(board,m-1,j);
            }
        }
        
        for(int i=0;i<m;i++){
            if(board[i][n-1]=='O'){
                check(board,i,n-1);
            }
            if(board[i][0]=='O'){
                check(board,i,0);
            }
        }
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='N'){
                    board[i][j]='O';
                }else{
                    board[i][j]='X';
                }
            }
        }
    }
    
    public void check(char[][] grid, int i, int j){
        /*if(i<0 || j<0 || i>=grid.length || j>=grid[0].length){
            return;
        }*/
        
        if(grid[i][j]=='O')
            grid[i][j] = 'N';
        else
            return;
        
        if(i-1>0)
            check(grid, i-1,j);
            
        if(i+1<grid.length-1)
            check(grid, i+1,j);
        
        if(j-1>0)
            check(grid, i,j-1);
        
        if(j+1<grid[0].length-1)
            check(grid, i,j+1);
    }
}