public class Solution {
    public int uniquePaths(int m,int n){
        
        int[][] array = new int[m][n];
        
        for(int i=0;i<m;i++){
            array[i][0] = 1;
        }
        
        for(int j=0;j<n;j++){
            array[0][j] = 1;
        }
        
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                array[i][j] = array[i-1][j] + array[i][j-1];
            }
        }
        
        return array[m-1][n-1];
        
    }


    /*public int uniquePaths(int m, int n) {
        
        int[] result = {0};
        
        computePaths(result, 0,0,m-1,n-1);
        
        return result[0];
    }
    
    public void computePaths(int[] result, int i, int j, int maxI, int maxJ){
        
        if(i<0 || j<0 || i>maxI || j>maxJ)
            return;
        
        if(i==maxI && j==maxJ){
            result[0]++;
            return;
        }
            
        computePaths(result, i,j+1,maxI,maxJ);
        computePaths(result, i+1,j,maxI,maxJ);
    }*/
}