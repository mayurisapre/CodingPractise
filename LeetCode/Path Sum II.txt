/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        
        List<List<Integer>> list = new ArrayList<>();
        
        
        
        if(root==null){
            return list;
        }
        
        List<Integer> temp = new ArrayList<Integer>();
        
        findPath(list, temp, root, sum);
        
        return list;
        
    }
    
    public void findPath(List<List<Integer>> list, List<Integer> temp, TreeNode root, int sum){
        
        if (root==null) return;
        temp.add(root.val);
        if (root.left==null && root.right==null && root.val==sum) {
            list.add(temp);
            return;
        }
        findPath(list, new ArrayList<Integer>(temp), root.left, sum-root.val);
        findPath(list, new ArrayList<Integer>(temp), root.right, sum-root.val);
        
        
        /*if(root.left == null && root.right== null){
            if(sum - root.val == 0){
                temp.add(root.val);
                List<Integer> array = new ArrayList<Integer>();
                array.addAll(temp);
                list.add(array);
                
                temp.remove(temp.size()-1);
            }
                return list;
        }
            
            temp.add(root.val);
            
            if(root.left != null){
                findPath(list,temp,root.left,sum-root.val);
                temp.remove(temp.size()-1);
            }
            
            if(root.right != null){
                findPath(list,temp,root.right,sum-root.val);
                temp.remove(temp.size()-1);
            }
            
        return list;*/
    }
}
