// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    private Iterator<Integer> iterator;
    private Integer value = null;

	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    this.iterator = iterator;
	    if(this.iterator.hasNext())
	        value = this.iterator.next();
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        return this.value;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    Integer temp = this.value;
	    if(this.iterator.hasNext())
	        this.value = this.iterator.next();
	    else
	        this.value = null;
	        
	    return temp;
	}

	@Override
	public boolean hasNext() {
	    if(this.value!=null)
	        return true;
	    return false;
	}
}