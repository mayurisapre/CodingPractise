public class Solution {
    public int ladderLength(String beginWord, String endWord, Set<String> wordList) {
        LinkedList<String> list = new LinkedList<String>();
        LinkedList<Integer> count = new LinkedList<Integer>();
        
        String currentWord;
        int currentCount;
        int length = beginWord.length();
        
        list.add(beginWord);
        count.add(1);
        
        while(!list.isEmpty()){
            currentWord = list.pop();
            currentCount = count.pop();  
            
            for(int i=0;i<length;i++){
                char[] array = currentWord.toCharArray();
                for(char j='a';j<='z';j++){
                    array[i] = j;
                    String newWord = new String(array);
                    if(newWord.equals(endWord))
                        return currentCount+1;
                    if(!newWord.equals(currentWord) && wordList.contains(newWord)){
                        list.add(newWord);
                        count.add(currentCount+1);
                        wordList.remove(newWord);
                    }
                }
            }
        }
        return 0;
    }
}