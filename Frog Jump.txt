import java.util.HashSet;
import java.util.Set;

public class Solution {
	
	public static void main(String[] args){
		Solution test = new Solution();
		int[] array = {5, 28, 70, 43, 12, 20, 17, 38, 52, 78, 81, 90, 60, 23, 76, 92, 24, 33};
		System.out.println(" " + test.solution(array, 100, 10));
		
	}

	public int solution(int[] A, int X, int D) {
        // write your code in Java SE 8
        
        if(X<=D)
            return 0;
        if(A.length == 0 && X>D)
            return -1;
        
        int currentPosition = 0;
        boolean flag = false;
        int j;
        
        Set<Integer> set = new HashSet<Integer>();
        
        for(int i = 0;i<A.length;i++){
            if(A[i] > currentPosition && A[i] <= currentPosition+D){
                flag = true;
                currentPosition = A[i];
                if(currentPosition+D>=X)
                    return i;
                
                while(flag && !set.isEmpty()){
                	int temp = currentPosition;
                    for(j = currentPosition+D;j>=currentPosition+1;j--){
                        if(set.contains(j)){
                            currentPosition = j;
                            set.remove(j);
                            break;
                        }
                    }
                    
                    if(currentPosition+D>=X)
                    return i;
                    
                    if(j == temp)
                        flag = false;
                }
            }else if(A[i] > currentPosition+D){
                set.add(A[i]);
            }
            
        }
        return -1;
    }}
